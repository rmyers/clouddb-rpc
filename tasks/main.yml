---
# Copyright 2016, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags:
    - always

- include: stash_install_apt.yml
  when: ansible_pkg_mgr == 'apt'

- include: stash_install_yum.yml
  when: ansible_pkg_mgr == 'yum'

- name: Install requires pip packages
  pip:
    name: "python-keystoneclient"
    state: "{{ stash_pip_package_state }}"
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2
  tags:
    - stash-install
    - stash-pip-packages

# Create a service
- name: Ensure stash service
  keystone:
    command: "ensure_service"
    endpoint: "{{ keystone_service_adminurl }}"
    login_user: "{{ keystone_admin_user_name }}"
    login_password: "{{ keystone_auth_admin_password }}"
    login_project_name: "{{ keystone_admin_tenant_name }}"
    service_name: "{{ stash_service_name }}"
    service_type: "{{ stash_service_type }}"
    description: "{{ stash_service_description }}"
    insecure: "{{ keystone_service_adminuri_insecure }}"
  register: add_service
  until: add_service|success
  retries: 5
  delay: 2
  tags:
    - stash-api-setup
    - stash-service-add
    - stash-setup

# Create an admin user
- name: Ensure stash user
  keystone:
    command: "ensure_user"
    endpoint: "{{ keystone_service_adminurl }}"
    login_user: "{{ keystone_admin_user_name }}"
    login_password: "{{ keystone_auth_admin_password }}"
    login_project_name: "{{ keystone_admin_tenant_name }}"
    user_name: "{{ stash_service_user_name }}"
    tenant_name: "{{ stash_service_project_name }}"
    password: "{{ stash_service_password }}"
    insecure: "{{ keystone_service_adminuri_insecure }}"
  register: add_service
  when: not stash_service_in_ldap | bool
  until: add_service|success
  retries: 5
  delay: 10
  tags:
    - stash-api-setup
    - stash-service-add
    - stash-setup

# Add a role to the user
- name: Ensure stash user to admin role
  keystone:
    command: "ensure_user_role"
    endpoint: "{{ keystone_service_adminurl }}"
    login_user: "{{ keystone_admin_user_name }}"
    login_password: "{{ keystone_auth_admin_password }}"
    login_project_name: "{{ keystone_admin_tenant_name }}"
    user_name: "{{ stash_service_user_name }}"
    tenant_name: "{{ stash_service_project_name }}"
    role_name: "{{ stash_service_role_name }}"
    insecure: "{{ keystone_service_adminuri_insecure }}"
  register: add_service
  when: not stash_service_in_ldap | bool
  until: add_service|success
  retries: 5
  delay: 10
  tags:
    - stash-api-setup
    - stash-service-add
    - stash-setup

# Create an endpoint
- name: Ensure stash endpoint
  keystone:
    command: "ensure_endpoint"
    endpoint: "{{ keystone_service_adminurl }}"
    login_user: "{{ keystone_admin_user_name }}"
    login_password: "{{ keystone_auth_admin_password }}"
    login_project_name: "{{ keystone_admin_tenant_name }}"
    region_name: "{{ stash_service_region }}"
    service_name: "{{ stash_service_name }}"
    service_type: "{{ stash_service_type }}"
    insecure: "{{ keystone_service_adminuri_insecure }}"
    endpoint_list:
      - url: "{{ stash_service_publicurl }}"
        interface: "public"
      - url: "{{ stash_service_internalurl }}"
        interface: "internal"
  register: add_service
  until: add_service|success
  retries: 5
  delay: 10
  tags:
    - stash-api-setup
    - stash-service-add
    - stash-setup

- name: Remove existing stash binary
  file:
    path: /usr/local/bin/stash
    state: absent

- name: "Download stash binary"
  get_url:
    url: https://67a471174656d99787e5-236a2c381091e68aabce1162620032ed.ssl.cf2.rackcdn.com/stash3000
    dest: /usr/local/bin/stash
    mode: 0755

- name: Create stash directory
  file:
    path: "/etc/stash"
    state: directory

- name: Create stash config file
  template:
    src: "stash.ini.j2"
    dest: "/etc/stash/stash.conf"
    mode: 0755
